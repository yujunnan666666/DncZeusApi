// <auto-generated />
using System;
using DncZeus.Api.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DncZeus.Api.Migrations
{
    [DbContext(typeof(DncZeusDbContext))]
    [Migration("20200303005518_MyMigration21")]
    partial class MyMigration21
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DncZeus.Api.Entities.ApprovalDuty", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("credate");

                    b.Property<string>("department")
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("getMask")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ordernum")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("temperature")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("tmpnum")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Guid");

                    b.ToTable("ApprovalDuty");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.ApprovalGoods", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("attachment")
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("credate");

                    b.Property<string>("department")
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("goodscount")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("goodsname")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ordernum")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("purpose")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("tmpnum")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Guid");

                    b.ToTable("ApprovalGoods");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.ApprovalStaffBack", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("backDate");

                    b.Property<DateTime?>("credate");

                    b.Property<string>("department")
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("endPlace")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("isFever")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("isIll")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("isPass")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("isReport")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("isTouch")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("liveType")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ordernum")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("quarantine");

                    b.Property<string>("startPlace")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("tmpnum")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("vehicle")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("zsDate");

                    b.HasKey("Guid");

                    b.ToTable("ApprovalStaffBack");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.DncIcon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedByUserGuid");

                    b.Property<string>("CreatedByUserName");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Custom")
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsDeleted");

                    b.Property<Guid?>("ModifiedByUserGuid");

                    b.Property<string>("ModifiedByUserName");

                    b.Property<DateTime?>("ModifiedOn");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("DncIcon");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.DncMenu", b =>
                {
                    b.Property<Guid>("Guid");

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("BeforeCloseFun")
                        .HasMaxLength(255);

                    b.Property<string>("Component")
                        .HasMaxLength(255);

                    b.Property<Guid>("CreatedByUserGuid");

                    b.Property<string>("CreatedByUserName");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(800)");

                    b.Property<int?>("HideInMenu");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("IsDefaultRouter");

                    b.Property<int>("IsDeleted");

                    b.Property<int>("Level");

                    b.Property<Guid?>("ModifiedByUserGuid");

                    b.Property<string>("ModifiedByUserName");

                    b.Property<DateTime?>("ModifiedOn");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("NotCache");

                    b.Property<Guid?>("ParentGuid");

                    b.Property<string>("ParentName");

                    b.Property<int>("Sort");

                    b.Property<int>("Status");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Guid");

                    b.ToTable("DncMenu");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.DncPermission", b =>
                {
                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ActionCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)");

                    b.Property<Guid>("CreatedByUserGuid");

                    b.Property<string>("CreatedByUserName");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Icon");

                    b.Property<int>("IsDeleted");

                    b.Property<Guid>("MenuGuid");

                    b.Property<Guid?>("ModifiedByUserGuid");

                    b.Property<string>("ModifiedByUserName");

                    b.Property<DateTime?>("ModifiedOn");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status");

                    b.Property<int>("Type");

                    b.HasKey("Code");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("MenuGuid");

                    b.ToTable("DncPermission");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.DncRole", b =>
                {
                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("CreatedByUserGuid");

                    b.Property<string>("CreatedByUserName");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBuiltin");

                    b.Property<int>("IsDeleted");

                    b.Property<bool>("IsSuperAdministrator");

                    b.Property<Guid?>("ModifiedByUserGuid");

                    b.Property<string>("ModifiedByUserName");

                    b.Property<DateTime?>("ModifiedOn");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status");

                    b.HasKey("Code");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("DncRole");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.DncRolePermissionMapping", b =>
                {
                    b.Property<string>("RoleCode")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PermissionCode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("CreatedOn");

                    b.HasKey("RoleCode", "PermissionCode");

                    b.HasIndex("PermissionCode");

                    b.ToTable("DncRolePermissionMapping");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.DncUser", b =>
                {
                    b.Property<Guid>("Guid");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("CreatedByUserGuid");

                    b.Property<string>("CreatedByUserName");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(800)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IsDeleted");

                    b.Property<int>("IsLocked");

                    b.Property<string>("LoginName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("ModifiedByUserGuid");

                    b.Property<string>("ModifiedByUserName");

                    b.Property<DateTime?>("ModifiedOn");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status");

                    b.Property<int>("UserType");

                    b.HasKey("Guid");

                    b.ToTable("DncUser");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.DncUserRoleMapping", b =>
                {
                    b.Property<Guid>("UserGuid");

                    b.Property<string>("RoleCode");

                    b.Property<DateTime>("CreatedOn");

                    b.HasKey("UserGuid", "RoleCode");

                    b.HasIndex("RoleCode");

                    b.ToTable("DncUserRoleMapping");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.MisAttachment", b =>
                {
                    b.Property<Guid>("Guid");

                    b.Property<DateTime?>("credate");

                    b.Property<string>("creuser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("fillName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("fillSize");

                    b.Property<string>("fillType")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("folderName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("frPathUrl")
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("mainUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("mmdd")
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("pathUrl")
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("yyyy")
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("Guid");

                    b.ToTable("MisAttachment");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.MisCatalog", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Icon")
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("credate");

                    b.Property<string>("creuser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("moddate");

                    b.Property<string>("moduser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("trseq");

                    b.HasKey("ID");

                    b.ToTable("MisCatalog");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.MisCkind", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Icon")
                        .HasColumnType("varchar(128)");

                    b.Property<int?>("MisCatalogID");

                    b.Property<string>("ckdesc")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ckind")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)");

                    b.Property<short>("clen");

                    b.Property<DateTime?>("credate");

                    b.Property<string>("creuser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("isEnabled")
                        .HasColumnType("char(1)");

                    b.Property<string>("isOrgValid")
                        .HasColumnType("char(1)");

                    b.Property<DateTime?>("moddate");

                    b.Property<string>("moduser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<short>("trseq");

                    b.HasKey("ID");

                    b.HasIndex("MisCatalogID");

                    b.ToTable("MisCkind");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.MisCkindExtend", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MisCKindId");

                    b.Property<byte>("Num")
                        .HasColumnType("tinyint");

                    b.Property<string>("colName")
                        .HasColumnType("nvarchar(10)");

                    b.Property<byte>("colType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("credate");

                    b.Property<string>("creuser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("isEnabled")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 64)))
                        .HasColumnType("char(1)");

                    b.Property<DateTime?>("moddate");

                    b.Property<string>("moduser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("sourceId");

                    b.HasKey("ID");

                    b.ToTable("MisCkindExtend");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.MisCkindPower", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MisKindID");

                    b.Property<DateTime?>("credate");

                    b.Property<string>("creuser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("inuse")
                        .HasColumnType("char(1)");

                    b.Property<int>("orgId");

                    b.Property<string>("padd")
                        .HasColumnType("char(1)");

                    b.Property<string>("pdelete")
                        .HasColumnType("char(1)");

                    b.Property<string>("pmodify")
                        .HasColumnType("char(1)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("userno")
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.ToTable("MisCkindPower");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.MisCode", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MisCkindID");

                    b.Property<int?>("MisOrganizationID");

                    b.Property<string>("cdesc")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("credate");

                    b.Property<string>("creuser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("extendCode1")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("extendCode2")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("extendCode3")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("extendCode4")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("extendCode5")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("extendCode6")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("extendCode7")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("extendCode8")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("extendCode9")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("extendName1")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("extendName2")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("extendName3")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("extendName4")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("extendName5")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("extendName6")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("extendName7")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("extendName8")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("extendName9")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("isEnabled")
                        .HasColumnType("char(1)");

                    b.Property<DateTime?>("moddate");

                    b.Property<string>("moduser")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.HasIndex("MisCkindID");

                    b.HasIndex("MisOrganizationID");

                    b.ToTable("MisCode");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.MisOrganization", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTime?>("credate");

                    b.Property<string>("creuser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("moddate");

                    b.Property<string>("moduser")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.ToTable("MisOrganization");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.Sec.Secbutton", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("butname")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("butno")
                        .HasColumnType("varchar(20)");

                    b.Property<short>("butorder")
                        .HasColumnType("smallint");

                    b.Property<string>("enabled")
                        .HasColumnType("char(1)");

                    b.HasKey("Guid");

                    b.ToTable("Secbutton");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.Sec.Secfun", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("enabled")
                        .HasColumnType("char(1)");

                    b.Property<string>("funname")
                        .HasColumnType("varchar(48)");

                    b.Property<string>("funno")
                        .HasColumnType("varchar(4)");

                    b.Property<short>("funorder")
                        .HasColumnType("smallint");

                    b.Property<string>("icon")
                        .HasColumnType("char(50)");

                    b.Property<Guid>("sysid");

                    b.HasKey("Guid");

                    b.ToTable("Secfun");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.Sec.Secgprg", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("butid");

                    b.Property<DateTime?>("credate");

                    b.Property<string>("creuser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("groupid");

                    b.Property<int>("orgid");

                    b.Property<Guid>("prgid");

                    b.HasKey("Guid");

                    b.ToTable("Secgprg");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.Sec.Secgroup", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("enabled")
                        .HasColumnType("char(1)");

                    b.Property<string>("groupname")
                        .HasColumnType("varchar(48)");

                    b.Property<string>("groupno")
                        .HasColumnType("varchar(8)");

                    b.Property<string>("gtype")
                        .HasColumnType("char(1)");

                    b.Property<string>("remark")
                        .HasColumnType("varchar(200)");

                    b.HasKey("Guid");

                    b.ToTable("Secgroup");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.Sec.Secguser", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("groupid");

                    b.Property<Guid>("userid");

                    b.HasKey("Guid");

                    b.ToTable("Secguser");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.Sec.Secprg", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("enabled")
                        .HasColumnType("char(1)");

                    b.Property<Guid>("funid");

                    b.Property<string>("icon")
                        .HasColumnType("char(50)");

                    b.Property<string>("prgcomp")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("prgname")
                        .HasColumnType("varchar(48)");

                    b.Property<string>("prgno")
                        .HasColumnType("varchar(8)");

                    b.Property<short>("prgorder")
                        .HasColumnType("smallint");

                    b.Property<string>("prgtype")
                        .HasColumnType("char(1)");

                    b.Property<string>("program")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("runtype")
                        .HasColumnType("char(1)");

                    b.Property<Guid>("sysid");

                    b.HasKey("Guid");

                    b.ToTable("Secprg");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.Sec.Secprgbut", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("butid");

                    b.Property<string>("butname")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("butno")
                        .HasColumnType("varchar(20)");

                    b.Property<short>("butorder")
                        .HasColumnType("smallint");

                    b.Property<Guid>("funid");

                    b.Property<Guid>("prgid");

                    b.Property<Guid>("sysid");

                    b.HasKey("Guid");

                    b.ToTable("Secprgbut");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.Sec.Secsys", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("enabled")
                        .HasColumnType("char(1)");

                    b.Property<string>("icon")
                        .HasColumnType("char(50)");

                    b.Property<string>("sysname")
                        .HasColumnType("varchar(48)");

                    b.Property<string>("sysno")
                        .HasColumnType("varchar(2)");

                    b.Property<short>("sysorder")
                        .HasColumnType("smallint");

                    b.HasKey("Guid");

                    b.ToTable("Secsys");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.Sec.Secuprg", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("butid");

                    b.Property<DateTime?>("credate");

                    b.Property<string>("creuser")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("orgid");

                    b.Property<Guid>("prgid");

                    b.Property<Guid>("userid");

                    b.HasKey("Guid");

                    b.ToTable("Secuprg");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.Sec.Secuser", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EmpName")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("EmpNo")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("code")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime?>("credate");

                    b.Property<string>("creuser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("depname")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("depno")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("email")
                        .HasColumnType("varchar(64)");

                    b.Property<string>("enabled")
                        .HasColumnType("char(1)");

                    b.Property<string>("jobname")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("jobno")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("moddate");

                    b.Property<string>("moduser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("pwd")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("telno")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("userLogo")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("username")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("userno")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("utype");

                    b.HasKey("Guid");

                    b.ToTable("Secuser");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.Sec.Secuserorg", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("orgid");

                    b.Property<Guid>("userid");

                    b.HasKey("Guid");

                    b.ToTable("Secuserorg");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.TechItemMaster", b =>
                {
                    b.Property<Guid>("Guid");

                    b.Property<int>("OrgID");

                    b.Property<string>("category")
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("cfmdate");

                    b.Property<string>("cfmuser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("contour")
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("credate");

                    b.Property<string>("creuser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("custcode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("deldate");

                    b.Property<string>("deluser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("direction")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("havecarve")
                        .HasColumnType("char(1)");

                    b.Property<string>("haveclass")
                        .HasColumnType("char(1)");

                    b.Property<string>("havedrawing")
                        .HasColumnType("char(1)");

                    b.Property<string>("havehandrail")
                        .HasColumnType("char(1)");

                    b.Property<string>("havemarble")
                        .HasColumnType("char(1)");

                    b.Property<string>("havemetal")
                        .HasColumnType("char(1)");

                    b.Property<int>("isdel");

                    b.Property<string>("itemcode")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("moddate");

                    b.Property<string>("moduser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("picsource")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("protype")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("remark")
                        .HasColumnType("nvarchar(200)");

                    b.Property<short>("seatqty");

                    b.Property<string>("status")
                        .HasColumnType("char(1)");

                    b.Property<string>("style")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("subcategory")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("wraptype")
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Guid");

                    b.ToTable("TechItemMaster");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.TechItemmAttachment", b =>
                {
                    b.Property<Guid>("Guid");

                    b.Property<Guid?>("MisAttachmentGuid");

                    b.Property<Guid?>("TechItemMasterGuid");

                    b.Property<string>("attType")
                        .HasColumnType("char(1)");

                    b.Property<string>("cont_sign")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("credate");

                    b.Property<string>("creuser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("deldate");

                    b.Property<string>("deluser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("direction")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("fileName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("isdel")
                        .HasColumnType("char(1)");

                    b.Property<string>("log_id")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("moddate");

                    b.Property<string>("moduser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("picsource")
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("remark")
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Guid");

                    b.HasIndex("MisAttachmentGuid");

                    b.HasIndex("TechItemMasterGuid");

                    b.ToTable("TechItemmAttachment");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.Tmp.TmpBoardsPrint", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LoginName")
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("creUserGuid");

                    b.Property<string>("creUserName")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("credate");

                    b.Property<Guid?>("itemBoardGuid");

                    b.Property<byte>("printType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("prtdate");

                    b.Property<short>("prtnum")
                        .HasColumnType("smallint");

                    b.Property<string>("remark")
                        .HasColumnType("varchar(200)");

                    b.HasKey("Guid");

                    b.ToTable("TmpBoardsPrint");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.Tmp.TmpItembarHead", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Org");

                    b.Property<short>("bagqty")
                        .HasColumnType("smallint");

                    b.Property<short>("boardqty")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("cfmdate");

                    b.Property<string>("cfmuser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("credate");

                    b.Property<string>("creuser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("fPackNo")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("fgoodscode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("fgoodsname")
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("fmono")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("fordno")
                        .HasColumnType("varchar(50)");

                    b.Property<short>("fqty")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("moddate");

                    b.Property<string>("moduser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<byte>("spStatus")
                        .HasColumnType("tinyint");

                    b.Property<short>("spqty")
                        .HasColumnType("smallint");

                    b.Property<byte>("status")
                        .HasColumnType("tinyint");

                    b.Property<string>("tmpPackNo")
                        .HasColumnType("varchar(20)");

                    b.Property<short>("unbagqty")
                        .HasColumnType("smallint");

                    b.HasKey("Guid");

                    b.ToTable("TmpItembarHead");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.Tmp.TmpItembarLine", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ItembarHeadGuid");

                    b.Property<byte>("boardType")
                        .HasColumnType("tinyint");

                    b.Property<string>("boardcode")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("boardname")
                        .HasColumnType("varchar(200)");

                    b.Property<short>("boardnum")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("credate");

                    b.Property<string>("creuser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("fBarcode")
                        .HasColumnType("varchar(20)");

                    b.Property<short>("fqty")
                        .HasColumnType("smallint");

                    b.Property<string>("fspcode")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("fspname")
                        .HasColumnType("nvarchar(150)");

                    b.Property<short>("hprintnum")
                        .HasColumnType("smallint");

                    b.Property<byte>("isValid")
                        .HasColumnType("tinyint");

                    b.Property<short>("lprintnum")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("moddate");

                    b.Property<string>("moduser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("valmdate");

                    b.Property<string>("valuser")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Guid");

                    b.HasIndex("ItembarHeadGuid");

                    b.ToTable("TmpItembarLine");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.Tmp.TmpItemBoards", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Org");

                    b.Property<string>("barCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("batchNum")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("boardQty");

                    b.Property<byte>("boardType")
                        .HasColumnType("tinyint");

                    b.Property<string>("boardcode")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("boardname")
                        .HasColumnType("varchar(200)");

                    b.Property<short>("boardnum")
                        .HasColumnType("smallint");

                    b.Property<Guid>("boardshGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("boardsize")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("cfmdate");

                    b.Property<string>("cfmuser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("credate");

                    b.Property<string>("creuser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("fBarcode")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("fGoodsID")
                        .HasColumnType("int");

                    b.Property<short>("fOrdQty")
                        .HasColumnType("smallint");

                    b.Property<string>("fPackNo")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("fgoodscode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("fgoodsname")
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("fmono")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("fordno")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("fspname")
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("imageNo")
                        .HasColumnType("varchar(50)");

                    b.Property<byte>("isSplit")
                        .HasColumnType("tinyint");

                    b.Property<byte>("isValid")
                        .HasColumnType("tinyint");

                    b.Property<short>("lprintnum")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("moddate");

                    b.Property<string>("moduser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("packIndex")
                        .HasColumnType("varchar(20)");

                    b.Property<short>("packQty")
                        .HasColumnType("smallint");

                    b.Property<byte>("status")
                        .HasColumnType("tinyint");

                    b.Property<string>("tmpPackNo")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("valmdate");

                    b.Property<string>("valuser")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Guid");

                    b.ToTable("TmpItemBoards");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.Tmp.TmpItemBoardsH", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Org");

                    b.Property<short>("bagqty")
                        .HasColumnType("smallint");

                    b.Property<string>("barCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("batchNum")
                        .HasColumnType("varchar(20)");

                    b.Property<short>("boardqty")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("cfmdate");

                    b.Property<string>("cfmuser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("credate");

                    b.Property<string>("creuser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("fOrdQty");

                    b.Property<string>("fPackNo")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("fgoodscode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("fgoodsname")
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("fmono")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("fordno")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("imageNo")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ordQty");

                    b.Property<short>("spqty")
                        .HasColumnType("smallint");

                    b.Property<byte>("spstatus")
                        .HasColumnType("tinyint");

                    b.Property<byte>("status")
                        .HasColumnType("tinyint");

                    b.Property<string>("tmpPackNo")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("trno")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("trseq");

                    b.Property<short>("unbagqty")
                        .HasColumnType("smallint");

                    b.HasKey("Guid");

                    b.ToTable("TmpItemBoardsH");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.Tmp.TmpItemBoardsMid", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Org");

                    b.Property<string>("barCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("batchNum")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("boardQty");

                    b.Property<byte>("boardType")
                        .HasColumnType("tinyint");

                    b.Property<string>("boardcode")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("boardname")
                        .HasColumnType("varchar(200)");

                    b.Property<short>("boardnum")
                        .HasColumnType("smallint");

                    b.Property<string>("boardsize")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("cfmdate");

                    b.Property<string>("cfmuser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("credate");

                    b.Property<string>("creuser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("fBarcode")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("fGoodsID")
                        .HasColumnType("int");

                    b.Property<int>("fOrdQty");

                    b.Property<string>("fPackNo")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("fgoodscode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("fgoodsname")
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("fmono")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("fordno")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("fspname")
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("imageNo")
                        .HasColumnType("varchar(50)");

                    b.Property<byte>("isSplit")
                        .HasColumnType("tinyint");

                    b.Property<byte>("isValid")
                        .HasColumnType("tinyint");

                    b.Property<short>("lprintnum")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("moddate");

                    b.Property<string>("moduser")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("packIndex")
                        .HasColumnType("varchar(20)");

                    b.Property<short>("packQty")
                        .HasColumnType("smallint");

                    b.Property<int>("rowIndex");

                    b.Property<byte>("status")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("valmdate");

                    b.Property<string>("valuser")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Guid");

                    b.ToTable("TmpItemBoardsMid");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.DncPermission", b =>
                {
                    b.HasOne("DncZeus.Api.Entities.DncMenu", "Menu")
                        .WithMany("Permissions")
                        .HasForeignKey("MenuGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DncZeus.Api.Entities.DncRolePermissionMapping", b =>
                {
                    b.HasOne("DncZeus.Api.Entities.DncPermission", "DncPermission")
                        .WithMany("Roles")
                        .HasForeignKey("PermissionCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DncZeus.Api.Entities.DncRole", "DncRole")
                        .WithMany("Permissions")
                        .HasForeignKey("RoleCode")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("DncZeus.Api.Entities.DncUserRoleMapping", b =>
                {
                    b.HasOne("DncZeus.Api.Entities.DncRole", "DncRole")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleCode")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("DncZeus.Api.Entities.DncUser", "DncUser")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserGuid")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("DncZeus.Api.Entities.MisCkind", b =>
                {
                    b.HasOne("DncZeus.Api.Entities.MisCatalog", "MisCatalog")
                        .WithMany()
                        .HasForeignKey("MisCatalogID");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.MisCode", b =>
                {
                    b.HasOne("DncZeus.Api.Entities.MisCkind", "MisCkind")
                        .WithMany()
                        .HasForeignKey("MisCkindID");

                    b.HasOne("DncZeus.Api.Entities.MisOrganization", "MisOrganization")
                        .WithMany()
                        .HasForeignKey("MisOrganizationID");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.TechItemmAttachment", b =>
                {
                    b.HasOne("DncZeus.Api.Entities.MisAttachment", "MisAttachment")
                        .WithMany()
                        .HasForeignKey("MisAttachmentGuid");

                    b.HasOne("DncZeus.Api.Entities.TechItemMaster", "TechItemMaster")
                        .WithMany()
                        .HasForeignKey("TechItemMasterGuid");
                });

            modelBuilder.Entity("DncZeus.Api.Entities.Tmp.TmpItembarLine", b =>
                {
                    b.HasOne("DncZeus.Api.Entities.Tmp.TmpItembarHead", "ItembarHead")
                        .WithMany()
                        .HasForeignKey("ItembarHeadGuid");
                });
#pragma warning restore 612, 618
        }
    }
}
